# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Hand-written file with variables common to all makefiles


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = stellar-core$(EXEEXT)
@USE_POSTGRES_TRUE@am__append_1 = -DUSE_POSTGRES=1 $(libpq_CFLAGS)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_append_compile_flags.m4 \
	$(top_srcdir)/m4/ax_append_flag.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/ax_fresh_compiler.m4 \
	$(top_srcdir)/m4/ax_pkgconfig_subdir.m4 \
	$(top_srcdir)/m4/ax_valgrind_check.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = bucket/Bucket.$(OBJEXT) \
	bucket/BucketApplicator.$(OBJEXT) \
	bucket/BucketInputIterator.$(OBJEXT) \
	bucket/BucketList.$(OBJEXT) bucket/BucketManagerImpl.$(OBJEXT) \
	bucket/BucketOutputIterator.$(OBJEXT) \
	bucket/BucketTests.$(OBJEXT) bucket/FutureBucket.$(OBJEXT) \
	bucket/PublishQueueBuckets.$(OBJEXT) \
	catchup/ApplyBucketsWork.$(OBJEXT) \
	catchup/ApplyLedgerChainWork.$(OBJEXT) \
	catchup/CatchupConfiguration.$(OBJEXT) \
	catchup/CatchupManagerImpl.$(OBJEXT) \
	catchup/CatchupWork.$(OBJEXT) \
	catchup/CatchupWorkTests.$(OBJEXT) \
	catchup/DownloadBucketsWork.$(OBJEXT) \
	catchup/VerifyLedgerChainWork.$(OBJEXT) \
	crypto/CryptoTests.$(OBJEXT) crypto/ECDH.$(OBJEXT) \
	crypto/Hex.$(OBJEXT) crypto/KeyUtils.$(OBJEXT) \
	crypto/Random.$(OBJEXT) crypto/SHA.$(OBJEXT) \
	crypto/SecretKey.$(OBJEXT) crypto/SignerKey.$(OBJEXT) \
	crypto/SignerKeyUtils.$(OBJEXT) crypto/StrKey.$(OBJEXT) \
	database/Database.$(OBJEXT) \
	database/DatabaseConnectionString.$(OBJEXT) \
	database/DatabaseConnectionStringTest.$(OBJEXT) \
	database/DatabaseTests.$(OBJEXT) \
	database/DatabaseUtils.$(OBJEXT) herder/Herder.$(OBJEXT) \
	herder/HerderImpl.$(OBJEXT) \
	herder/HerderPersistenceImpl.$(OBJEXT) \
	herder/HerderSCPDriver.$(OBJEXT) herder/HerderTests.$(OBJEXT) \
	herder/HerderUtils.$(OBJEXT) herder/LedgerCloseData.$(OBJEXT) \
	herder/PendingEnvelopes.$(OBJEXT) \
	herder/PendingEnvelopesTests.$(OBJEXT) \
	herder/TxSetFrame.$(OBJEXT) herder/Upgrades.$(OBJEXT) \
	herder/UpgradesTests.$(OBJEXT) \
	history/FileTransferInfo.$(OBJEXT) \
	history/HistoryArchive.$(OBJEXT) \
	history/HistoryManagerImpl.$(OBJEXT) \
	history/HistoryTests.$(OBJEXT) \
	history/HistoryTestsUtils.$(OBJEXT) \
	history/InferredQuorum.$(OBJEXT) \
	history/InferredQuorumTests.$(OBJEXT) \
	history/SerializeTests.$(OBJEXT) \
	history/StateSnapshot.$(OBJEXT) \
	historywork/BatchDownloadWork.$(OBJEXT) \
	historywork/BucketDownloadWork.$(OBJEXT) \
	historywork/FetchRecentQsetsWork.$(OBJEXT) \
	historywork/GetAndUnzipRemoteFileWork.$(OBJEXT) \
	historywork/GetHistoryArchiveStateWork.$(OBJEXT) \
	historywork/GetRemoteFileWork.$(OBJEXT) \
	historywork/GunzipFileWork.$(OBJEXT) \
	historywork/GzipFileWork.$(OBJEXT) \
	historywork/MakeRemoteDirWork.$(OBJEXT) \
	historywork/Progress.$(OBJEXT) \
	historywork/PublishWork.$(OBJEXT) \
	historywork/PutHistoryArchiveStateWork.$(OBJEXT) \
	historywork/PutRemoteFileWork.$(OBJEXT) \
	historywork/PutSnapshotFilesWork.$(OBJEXT) \
	historywork/RepairMissingBucketsWork.$(OBJEXT) \
	historywork/ResolveSnapshotWork.$(OBJEXT) \
	historywork/RunCommandWork.$(OBJEXT) \
	historywork/VerifyBucketWork.$(OBJEXT) \
	historywork/WriteSnapshotWork.$(OBJEXT) \
	invariant/AccountSubEntriesCountIsValid.$(OBJEXT) \
	invariant/AccountSubEntriesCountIsValidTests.$(OBJEXT) \
	invariant/BucketListIsConsistentWithDatabase.$(OBJEXT) \
	invariant/BucketListIsConsistentWithDatabaseTests.$(OBJEXT) \
	invariant/CacheIsConsistentWithDatabase.$(OBJEXT) \
	invariant/CacheIsConsistentWithDatabaseTests.$(OBJEXT) \
	invariant/ConservationOfLumens.$(OBJEXT) \
	invariant/ConservationOfLumensTests.$(OBJEXT) \
	invariant/InvariantDoesNotHold.$(OBJEXT) \
	invariant/InvariantManagerImpl.$(OBJEXT) \
	invariant/InvariantTestUtils.$(OBJEXT) \
	invariant/InvariantTests.$(OBJEXT) \
	invariant/LedgerEntryIsValid.$(OBJEXT) \
	invariant/MinimumAccountBalance.$(OBJEXT) \
	invariant/MinimumAccountBalanceTests.$(OBJEXT) \
	ledger/AccountFrame.$(OBJEXT) ledger/CheckpointRange.$(OBJEXT) \
	ledger/DataFrame.$(OBJEXT) ledger/EntryFrame.$(OBJEXT) \
	ledger/LedgerDelta.$(OBJEXT) ledger/LedgerDeltaTests.$(OBJEXT) \
	ledger/LedgerEntryTests.$(OBJEXT) \
	ledger/LedgerHeaderFrame.$(OBJEXT) \
	ledger/LedgerHeaderTests.$(OBJEXT) \
	ledger/LedgerManagerImpl.$(OBJEXT) \
	ledger/LedgerPerformanceTests.$(OBJEXT) \
	ledger/LedgerRange.$(OBJEXT) ledger/LedgerTestUtils.$(OBJEXT) \
	ledger/LedgerTests.$(OBJEXT) ledger/OfferFrame.$(OBJEXT) \
	ledger/SyncingLedgerChain.$(OBJEXT) \
	ledger/SyncingLedgerChainTests.$(OBJEXT) \
	ledger/TrustFrame.$(OBJEXT) main/Application.$(OBJEXT) \
	main/ApplicationImpl.$(OBJEXT) main/ApplicationTests.$(OBJEXT) \
	main/CommandHandler.$(OBJEXT) main/Config.$(OBJEXT) \
	main/ConfigTests.$(OBJEXT) main/ExternalQueue.$(OBJEXT) \
	main/ExternalQueueTests.$(OBJEXT) main/LruCacheTests.$(OBJEXT) \
	main/Maintainer.$(OBJEXT) main/ManagedDataCache.$(OBJEXT) \
	main/NtpSynchronizationChecker.$(OBJEXT) \
	main/PersistentState.$(OBJEXT) main/Whitelist.$(OBJEXT) \
	main/dumpxdr.$(OBJEXT) main/fuzz.$(OBJEXT) main/main.$(OBJEXT) \
	overlay/BanManagerImpl.$(OBJEXT) overlay/FloodTests.$(OBJEXT) \
	overlay/Floodgate.$(OBJEXT) overlay/ItemFetcher.$(OBJEXT) \
	overlay/ItemFetcherTests.$(OBJEXT) \
	overlay/LoadManager.$(OBJEXT) \
	overlay/LoadManagerTests.$(OBJEXT) \
	overlay/LoopbackPeer.$(OBJEXT) \
	overlay/OverlayManagerImpl.$(OBJEXT) \
	overlay/OverlayManagerTests.$(OBJEXT) \
	overlay/OverlayTests.$(OBJEXT) overlay/Peer.$(OBJEXT) \
	overlay/PeerAuth.$(OBJEXT) overlay/PeerBareAddress.$(OBJEXT) \
	overlay/PeerDoor.$(OBJEXT) overlay/PeerRecord.$(OBJEXT) \
	overlay/PeerRecordTests.$(OBJEXT) overlay/TCPPeer.$(OBJEXT) \
	overlay/TCPPeerTests.$(OBJEXT) overlay/Tracker.$(OBJEXT) \
	overlay/TrackerTests.$(OBJEXT) \
	process/ProcessManagerImpl.$(OBJEXT) \
	process/ProcessTests.$(OBJEXT) scp/BallotProtocol.$(OBJEXT) \
	scp/LocalNode.$(OBJEXT) scp/NominationProtocol.$(OBJEXT) \
	scp/QuorumSetTests.$(OBJEXT) scp/QuorumSetUtils.$(OBJEXT) \
	scp/SCP.$(OBJEXT) scp/SCPDriver.$(OBJEXT) \
	scp/SCPTests.$(OBJEXT) scp/SCPUnitTests.$(OBJEXT) \
	scp/Slot.$(OBJEXT) simulation/CoreTests.$(OBJEXT) \
	simulation/LoadGenerator.$(OBJEXT) \
	simulation/Simulation.$(OBJEXT) \
	simulation/Topologies.$(OBJEXT) test/TestAccount.$(OBJEXT) \
	test/TestExceptions.$(OBJEXT) test/TestMarket.$(OBJEXT) \
	test/TestPrinter.$(OBJEXT) test/TestUtils.$(OBJEXT) \
	test/TxTests.$(OBJEXT) test/test.$(OBJEXT) \
	transactions/AllowTrustOpFrame.$(OBJEXT) \
	transactions/AllowTrustTests.$(OBJEXT) \
	transactions/ChangeTrustOpFrame.$(OBJEXT) \
	transactions/ChangeTrustTests.$(OBJEXT) \
	transactions/CreateAccountOpFrame.$(OBJEXT) \
	transactions/CreatePassiveOfferOpFrame.$(OBJEXT) \
	transactions/ExchangeTests.$(OBJEXT) \
	transactions/InflationOpFrame.$(OBJEXT) \
	transactions/InflationTests.$(OBJEXT) \
	transactions/ManageDataOpFrame.$(OBJEXT) \
	transactions/ManageDataTests.$(OBJEXT) \
	transactions/ManageOfferOpFrame.$(OBJEXT) \
	transactions/MergeOpFrame.$(OBJEXT) \
	transactions/MergeTests.$(OBJEXT) \
	transactions/OfferExchange.$(OBJEXT) \
	transactions/OfferTests.$(OBJEXT) \
	transactions/OperationFrame.$(OBJEXT) \
	transactions/PathPaymentOpFrame.$(OBJEXT) \
	transactions/PathPaymentTests.$(OBJEXT) \
	transactions/PaymentOpFrame.$(OBJEXT) \
	transactions/PaymentTests.$(OBJEXT) \
	transactions/SetOptionsOpFrame.$(OBJEXT) \
	transactions/SetOptionsTests.$(OBJEXT) \
	transactions/SignatureChecker.$(OBJEXT) \
	transactions/SignatureUtils.$(OBJEXT) \
	transactions/SignatureUtilsTest.$(OBJEXT) \
	transactions/TransactionFrame.$(OBJEXT) \
	transactions/TxEnvelopeTests.$(OBJEXT) \
	transactions/TxResultsTests.$(OBJEXT) \
	util/BalanceTests.$(OBJEXT) util/BigDivideTests.$(OBJEXT) \
	util/BitsetEnumerator.$(OBJEXT) \
	util/BitsetEnumeratorTests.$(OBJEXT) util/Fs.$(OBJEXT) \
	util/FsTests.$(OBJEXT) util/GlobalChecks.$(OBJEXT) \
	util/HashOfHash.$(OBJEXT) util/Logging.$(OBJEXT) \
	util/Math.$(OBJEXT) util/NtpClient.$(OBJEXT) \
	util/NtpWork.$(OBJEXT) util/SecretValue.$(OBJEXT) \
	util/StatusManager.$(OBJEXT) util/StatusManagerTest.$(OBJEXT) \
	util/Timer.$(OBJEXT) util/TimerTests.$(OBJEXT) \
	util/TmpDir.$(OBJEXT) util/Uint128Tests.$(OBJEXT) \
	util/types.$(OBJEXT) work/Work.$(OBJEXT) \
	work/WorkManagerImpl.$(OBJEXT) work/WorkParent.$(OBJEXT) \
	work/WorkTests.$(OBJEXT)
am_stellar_core_OBJECTS = main/StellarCoreVersion.$(OBJEXT) \
	$(am__objects_1)
stellar_core_OBJECTS = $(am_stellar_core_OBJECTS)
am__DEPENDENCIES_1 =
stellar_core_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(top_builddir)/lib/lib3rdparty.a \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(stellar_core_SOURCES)
DIST_SOURCES = $(stellar_core_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/src.mk \
	$(top_srcdir)/common.mk $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AFL_CLANG = @AFL_CLANG@
AFL_CLANGPP = @AFL_CLANGPP@
AFL_FUZZ = @AFL_FUZZ@
AFL_GCC = @AFL_GCC@
AFL_GPP = @AFL_GPP@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCACHE = @CCACHE@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLANG_FORMAT = @CLANG_FORMAT@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
HAVE_CXX11 = @HAVE_CXX11@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKGCONFIG_SUBDIRS = @PKGCONFIG_SUBDIRS@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VALGRIND = @VALGRIND@
VALGRIND_ENABLED = @VALGRIND_ENABLED@
VALGRIND_HAVE_TOOL_drd = @VALGRIND_HAVE_TOOL_drd@
VALGRIND_HAVE_TOOL_exp_sgcheck = @VALGRIND_HAVE_TOOL_exp_sgcheck@
VALGRIND_HAVE_TOOL_helgrind = @VALGRIND_HAVE_TOOL_helgrind@
VALGRIND_HAVE_TOOL_memcheck = @VALGRIND_HAVE_TOOL_memcheck@
VERSION = @VERSION@
XDRC = @XDRC@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
libmedida_CFLAGS = @libmedida_CFLAGS@
libmedida_LIBS = @libmedida_LIBS@
libpq_CFLAGS = @libpq_CFLAGS@
libpq_LIBS = @libpq_LIBS@
libsodium_CFLAGS = @libsodium_CFLAGS@
libsodium_LIBS = @libsodium_LIBS@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
soci_CFLAGS = @soci_CFLAGS@
soci_LIBS = @soci_LIBS@
sqlite3_CFLAGS = @sqlite3_CFLAGS@
sqlite3_LIBS = @sqlite3_LIBS@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
xdrpp_CFLAGS = @xdrpp_CFLAGS@
xdrpp_LIBS = @xdrpp_LIBS@
AUTOMAKE_OPTIONS = serial-tests
AM_CPPFLAGS = -DASIO_SEPARATE_COMPILATION=1 \
	-DSQLITE_OMIT_LOAD_EXTENSION=1 -I"$(top_srcdir)" \
	-I"$(top_srcdir)/src" -I"$(top_builddir)/src" \
	$(libsodium_CFLAGS) $(xdrpp_CFLAGS) $(libmedida_CFLAGS) \
	$(soci_CFLAGS) $(sqlite3_CFLAGS) -I"$(top_srcdir)/lib" \
	-I"$(top_srcdir)/lib/autocheck/include" \
	-I"$(top_srcdir)/lib/cereal/include" \
	-I"$(top_srcdir)/lib/asio/include" -I"$(top_srcdir)/lib/util" \
	-I"$(top_srcdir)/lib/soci/src/core" $(am__append_1)

# This file was generated by make-mks; don't edit it by hand.
SRC_H_FILES = bucket/Bucket.h bucket/BucketApplicator.h \
	bucket/BucketInputIterator.h bucket/BucketList.h \
	bucket/BucketManager.h bucket/BucketManagerImpl.h \
	bucket/BucketOutputIterator.h bucket/FutureBucket.h \
	bucket/LedgerCmp.h bucket/PublishQueueBuckets.h \
	catchup/ApplyBucketsWork.h catchup/ApplyLedgerChainWork.h \
	catchup/CatchupConfiguration.h catchup/CatchupManager.h \
	catchup/CatchupManagerImpl.h catchup/CatchupWork.h \
	catchup/CatchupWorkTests.h catchup/DownloadBucketsWork.h \
	catchup/VerifyLedgerChainWork.h crypto/ByteSlice.h \
	crypto/ECDH.h crypto/Hex.h crypto/KeyUtils.h crypto/Random.h \
	crypto/SHA.h crypto/SecretKey.h crypto/SignerKey.h \
	crypto/SignerKeyUtils.h crypto/StrKey.h database/Database.h \
	database/DatabaseConnectionString.h database/DatabaseUtils.h \
	herder/Herder.h herder/HerderImpl.h herder/HerderPersistence.h \
	herder/HerderPersistenceImpl.h herder/HerderSCPDriver.h \
	herder/HerderUtils.h herder/LedgerCloseData.h \
	herder/PendingEnvelopes.h herder/TxSetFrame.h \
	herder/Upgrades.h history/FileTransferInfo.h \
	history/HistoryArchive.h history/HistoryManager.h \
	history/HistoryManagerImpl.h history/HistoryTestsUtils.h \
	history/InferredQuorum.h history/StateSnapshot.h \
	historywork/BatchDownloadWork.h \
	historywork/BucketDownloadWork.h \
	historywork/FetchRecentQsetsWork.h \
	historywork/GetAndUnzipRemoteFileWork.h \
	historywork/GetHistoryArchiveStateWork.h \
	historywork/GetRemoteFileWork.h historywork/GunzipFileWork.h \
	historywork/GzipFileWork.h historywork/MakeRemoteDirWork.h \
	historywork/Progress.h historywork/PublishWork.h \
	historywork/PutHistoryArchiveStateWork.h \
	historywork/PutRemoteFileWork.h \
	historywork/PutSnapshotFilesWork.h \
	historywork/RepairMissingBucketsWork.h \
	historywork/ResolveSnapshotWork.h historywork/RunCommandWork.h \
	historywork/VerifyBucketWork.h historywork/WriteSnapshotWork.h \
	invariant/AccountSubEntriesCountIsValid.h \
	invariant/BucketListIsConsistentWithDatabase.h \
	invariant/CacheIsConsistentWithDatabase.h \
	invariant/ConservationOfLumens.h invariant/Invariant.h \
	invariant/InvariantDoesNotHold.h invariant/InvariantManager.h \
	invariant/InvariantManagerImpl.h \
	invariant/InvariantTestUtils.h invariant/LedgerEntryIsValid.h \
	invariant/MinimumAccountBalance.h ledger/AccountFrame.h \
	ledger/CheckpointRange.h ledger/DataFrame.h \
	ledger/EntryFrame.h ledger/LedgerDelta.h \
	ledger/LedgerHeaderFrame.h ledger/LedgerManager.h \
	ledger/LedgerManagerImpl.h ledger/LedgerRange.h \
	ledger/LedgerTestUtils.h ledger/OfferFrame.h \
	ledger/SyncingLedgerChain.h ledger/TrustFrame.h \
	main/Application.h main/ApplicationImpl.h \
	main/CommandHandler.h main/Config.h main/ExternalQueue.h \
	main/Maintainer.h main/ManagedDataCache.h \
	main/NtpSynchronizationChecker.h main/PersistentState.h \
	main/StellarCoreVersion.h main/Whitelist.h main/dumpxdr.h \
	main/fuzz.h overlay/BanManager.h overlay/BanManagerImpl.h \
	overlay/Floodgate.h overlay/ItemFetcher.h \
	overlay/LoadManager.h overlay/LoopbackPeer.h \
	overlay/OverlayManager.h overlay/OverlayManagerImpl.h \
	overlay/Peer.h overlay/PeerAuth.h overlay/PeerBareAddress.h \
	overlay/PeerDoor.h overlay/PeerRecord.h overlay/StellarXDR.h \
	overlay/TCPPeer.h overlay/Tracker.h process/ProcessManager.h \
	process/ProcessManagerImpl.h scp/BallotProtocol.h \
	scp/LocalNode.h scp/NominationProtocol.h scp/QuorumSetUtils.h \
	scp/SCP.h scp/SCPDriver.h scp/Slot.h \
	simulation/LoadGenerator.h simulation/Simulation.h \
	simulation/Topologies.h test/SimpleTestReporter.h \
	test/TestAccount.h test/TestExceptions.h test/TestMarket.h \
	test/TestPrinter.h test/TestUtils.h test/TxTests.h test/test.h \
	transactions/AllowTrustOpFrame.h \
	transactions/ChangeTrustOpFrame.h \
	transactions/CreateAccountOpFrame.h \
	transactions/CreatePassiveOfferOpFrame.h \
	transactions/InflationOpFrame.h \
	transactions/ManageDataOpFrame.h \
	transactions/ManageOfferOpFrame.h transactions/MergeOpFrame.h \
	transactions/OfferExchange.h transactions/OperationFrame.h \
	transactions/PathPaymentOpFrame.h \
	transactions/PaymentOpFrame.h transactions/SetOptionsOpFrame.h \
	transactions/SignatureChecker.h transactions/SignatureUtils.h \
	transactions/TransactionFrame.h util/Algoritm.h \
	util/BitsetEnumerator.h util/Fs.h util/GlobalChecks.h \
	util/HashOfHash.h util/Logging.h util/Math.h \
	util/NonCopyable.h util/NtpClient.h util/NtpWork.h \
	util/SecretValue.h util/SociNoWarnings.h util/StatusManager.h \
	util/Timer.h util/TmpDir.h util/XDRStream.h util/asio.h \
	util/make_unique.h util/must_use.h util/optional.h \
	util/types.h work/Work.h work/WorkManager.h \
	work/WorkManagerImpl.h work/WorkParent.h
SRC_CXX_FILES = bucket/Bucket.cpp bucket/BucketApplicator.cpp \
	bucket/BucketInputIterator.cpp bucket/BucketList.cpp \
	bucket/BucketManagerImpl.cpp bucket/BucketOutputIterator.cpp \
	bucket/BucketTests.cpp bucket/FutureBucket.cpp \
	bucket/PublishQueueBuckets.cpp catchup/ApplyBucketsWork.cpp \
	catchup/ApplyLedgerChainWork.cpp \
	catchup/CatchupConfiguration.cpp \
	catchup/CatchupManagerImpl.cpp catchup/CatchupWork.cpp \
	catchup/CatchupWorkTests.cpp catchup/DownloadBucketsWork.cpp \
	catchup/VerifyLedgerChainWork.cpp crypto/CryptoTests.cpp \
	crypto/ECDH.cpp crypto/Hex.cpp crypto/KeyUtils.cpp \
	crypto/Random.cpp crypto/SHA.cpp crypto/SecretKey.cpp \
	crypto/SignerKey.cpp crypto/SignerKeyUtils.cpp \
	crypto/StrKey.cpp database/Database.cpp \
	database/DatabaseConnectionString.cpp \
	database/DatabaseConnectionStringTest.cpp \
	database/DatabaseTests.cpp database/DatabaseUtils.cpp \
	herder/Herder.cpp herder/HerderImpl.cpp \
	herder/HerderPersistenceImpl.cpp herder/HerderSCPDriver.cpp \
	herder/HerderTests.cpp herder/HerderUtils.cpp \
	herder/LedgerCloseData.cpp herder/PendingEnvelopes.cpp \
	herder/PendingEnvelopesTests.cpp herder/TxSetFrame.cpp \
	herder/Upgrades.cpp herder/UpgradesTests.cpp \
	history/FileTransferInfo.cpp history/HistoryArchive.cpp \
	history/HistoryManagerImpl.cpp history/HistoryTests.cpp \
	history/HistoryTestsUtils.cpp history/InferredQuorum.cpp \
	history/InferredQuorumTests.cpp history/SerializeTests.cpp \
	history/StateSnapshot.cpp historywork/BatchDownloadWork.cpp \
	historywork/BucketDownloadWork.cpp \
	historywork/FetchRecentQsetsWork.cpp \
	historywork/GetAndUnzipRemoteFileWork.cpp \
	historywork/GetHistoryArchiveStateWork.cpp \
	historywork/GetRemoteFileWork.cpp \
	historywork/GunzipFileWork.cpp historywork/GzipFileWork.cpp \
	historywork/MakeRemoteDirWork.cpp historywork/Progress.cpp \
	historywork/PublishWork.cpp \
	historywork/PutHistoryArchiveStateWork.cpp \
	historywork/PutRemoteFileWork.cpp \
	historywork/PutSnapshotFilesWork.cpp \
	historywork/RepairMissingBucketsWork.cpp \
	historywork/ResolveSnapshotWork.cpp \
	historywork/RunCommandWork.cpp \
	historywork/VerifyBucketWork.cpp \
	historywork/WriteSnapshotWork.cpp \
	invariant/AccountSubEntriesCountIsValid.cpp \
	invariant/AccountSubEntriesCountIsValidTests.cpp \
	invariant/BucketListIsConsistentWithDatabase.cpp \
	invariant/BucketListIsConsistentWithDatabaseTests.cpp \
	invariant/CacheIsConsistentWithDatabase.cpp \
	invariant/CacheIsConsistentWithDatabaseTests.cpp \
	invariant/ConservationOfLumens.cpp \
	invariant/ConservationOfLumensTests.cpp \
	invariant/InvariantDoesNotHold.cpp \
	invariant/InvariantManagerImpl.cpp \
	invariant/InvariantTestUtils.cpp invariant/InvariantTests.cpp \
	invariant/LedgerEntryIsValid.cpp \
	invariant/MinimumAccountBalance.cpp \
	invariant/MinimumAccountBalanceTests.cpp \
	ledger/AccountFrame.cpp ledger/CheckpointRange.cpp \
	ledger/DataFrame.cpp ledger/EntryFrame.cpp \
	ledger/LedgerDelta.cpp ledger/LedgerDeltaTests.cpp \
	ledger/LedgerEntryTests.cpp ledger/LedgerHeaderFrame.cpp \
	ledger/LedgerHeaderTests.cpp ledger/LedgerManagerImpl.cpp \
	ledger/LedgerPerformanceTests.cpp ledger/LedgerRange.cpp \
	ledger/LedgerTestUtils.cpp ledger/LedgerTests.cpp \
	ledger/OfferFrame.cpp ledger/SyncingLedgerChain.cpp \
	ledger/SyncingLedgerChainTests.cpp ledger/TrustFrame.cpp \
	main/Application.cpp main/ApplicationImpl.cpp \
	main/ApplicationTests.cpp main/CommandHandler.cpp \
	main/Config.cpp main/ConfigTests.cpp main/ExternalQueue.cpp \
	main/ExternalQueueTests.cpp main/LruCacheTests.cpp \
	main/Maintainer.cpp main/ManagedDataCache.cpp \
	main/NtpSynchronizationChecker.cpp main/PersistentState.cpp \
	main/Whitelist.cpp main/dumpxdr.cpp main/fuzz.cpp \
	main/main.cpp overlay/BanManagerImpl.cpp \
	overlay/FloodTests.cpp overlay/Floodgate.cpp \
	overlay/ItemFetcher.cpp overlay/ItemFetcherTests.cpp \
	overlay/LoadManager.cpp overlay/LoadManagerTests.cpp \
	overlay/LoopbackPeer.cpp overlay/OverlayManagerImpl.cpp \
	overlay/OverlayManagerTests.cpp overlay/OverlayTests.cpp \
	overlay/Peer.cpp overlay/PeerAuth.cpp \
	overlay/PeerBareAddress.cpp overlay/PeerDoor.cpp \
	overlay/PeerRecord.cpp overlay/PeerRecordTests.cpp \
	overlay/TCPPeer.cpp overlay/TCPPeerTests.cpp \
	overlay/Tracker.cpp overlay/TrackerTests.cpp \
	process/ProcessManagerImpl.cpp process/ProcessTests.cpp \
	scp/BallotProtocol.cpp scp/LocalNode.cpp \
	scp/NominationProtocol.cpp scp/QuorumSetTests.cpp \
	scp/QuorumSetUtils.cpp scp/SCP.cpp scp/SCPDriver.cpp \
	scp/SCPTests.cpp scp/SCPUnitTests.cpp scp/Slot.cpp \
	simulation/CoreTests.cpp simulation/LoadGenerator.cpp \
	simulation/Simulation.cpp simulation/Topologies.cpp \
	test/TestAccount.cpp test/TestExceptions.cpp \
	test/TestMarket.cpp test/TestPrinter.cpp test/TestUtils.cpp \
	test/TxTests.cpp test/test.cpp \
	transactions/AllowTrustOpFrame.cpp \
	transactions/AllowTrustTests.cpp \
	transactions/ChangeTrustOpFrame.cpp \
	transactions/ChangeTrustTests.cpp \
	transactions/CreateAccountOpFrame.cpp \
	transactions/CreatePassiveOfferOpFrame.cpp \
	transactions/ExchangeTests.cpp \
	transactions/InflationOpFrame.cpp \
	transactions/InflationTests.cpp \
	transactions/ManageDataOpFrame.cpp \
	transactions/ManageDataTests.cpp \
	transactions/ManageOfferOpFrame.cpp \
	transactions/MergeOpFrame.cpp transactions/MergeTests.cpp \
	transactions/OfferExchange.cpp transactions/OfferTests.cpp \
	transactions/OperationFrame.cpp \
	transactions/PathPaymentOpFrame.cpp \
	transactions/PathPaymentTests.cpp \
	transactions/PaymentOpFrame.cpp transactions/PaymentTests.cpp \
	transactions/SetOptionsOpFrame.cpp \
	transactions/SetOptionsTests.cpp \
	transactions/SignatureChecker.cpp \
	transactions/SignatureUtils.cpp \
	transactions/SignatureUtilsTest.cpp \
	transactions/TransactionFrame.cpp \
	transactions/TxEnvelopeTests.cpp \
	transactions/TxResultsTests.cpp util/BalanceTests.cpp \
	util/BigDivideTests.cpp util/BitsetEnumerator.cpp \
	util/BitsetEnumeratorTests.cpp util/Fs.cpp util/FsTests.cpp \
	util/GlobalChecks.cpp util/HashOfHash.cpp util/Logging.cpp \
	util/Math.cpp util/NtpClient.cpp util/NtpWork.cpp \
	util/SecretValue.cpp util/StatusManager.cpp \
	util/StatusManagerTest.cpp util/Timer.cpp util/TimerTests.cpp \
	util/TmpDir.cpp util/Uint128Tests.cpp util/types.cpp \
	work/Work.cpp work/WorkManagerImpl.cpp work/WorkParent.cpp \
	work/WorkTests.cpp
SRC_X_FILES = xdr/Stellar-SCP.x xdr/Stellar-ledger-entries.x xdr/Stellar-ledger.x xdr/Stellar-overlay.x xdr/Stellar-transaction.x xdr/Stellar-types.x
noinst_HEADERS = $(SRC_H_FILES)
stellar_core_SOURCES = main/StellarCoreVersion.cpp $(SRC_CXX_FILES)
stellar_core_LDADD = $(soci_LIBS) $(libmedida_LIBS)		\
	$(top_builddir)/lib/lib3rdparty.a $(sqlite3_LIBS)	\
	$(libpq_LIBS) $(xdrpp_LIBS) $(libsodium_LIBS)

TESTDATA_DIR = testdata
TEST_FILES = $(TESTDATA_DIR)/stellar-core_example.cfg $(TESTDATA_DIR)/stellar-core_standalone.cfg $(TESTDATA_DIR)/stellar-core_testnet.cfg \
	     $(TESTDATA_DIR)/stellar-history.testnet.6714239.json $(TESTDATA_DIR)/stellar-history.livenet.15686975.json

BUILT_SOURCES = $(SRC_X_FILES:.x=.h) main/StellarCoreVersion.cpp $(TEST_FILES)
SUFFIXES = .x .h
@USE_POSTGRES_FALSE@TESTS = test/selftest-nopg
@USE_POSTGRES_TRUE@TESTS = test/selftest-pg
CLEANFILES = $(BUILT_SOURCES) *~ */*~ stellar*.log
MAINTAINERCLEANFILES = $(srcdir)/Makefile.in $(srcdir)/*~ $(srcdir)/*/*~
EXTRA_DIST = $(SRC_X_FILES) test/selftest-nopg test/selftest-pg
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .x .h .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/common.mk $(srcdir)/src.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/common.mk $(srcdir)/src.mk $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
main/$(am__dirstamp):
	@$(MKDIR_P) main
	@: > main/$(am__dirstamp)
main/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) main/$(DEPDIR)
	@: > main/$(DEPDIR)/$(am__dirstamp)
main/StellarCoreVersion.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
bucket/$(am__dirstamp):
	@$(MKDIR_P) bucket
	@: > bucket/$(am__dirstamp)
bucket/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) bucket/$(DEPDIR)
	@: > bucket/$(DEPDIR)/$(am__dirstamp)
bucket/Bucket.$(OBJEXT): bucket/$(am__dirstamp) \
	bucket/$(DEPDIR)/$(am__dirstamp)
bucket/BucketApplicator.$(OBJEXT): bucket/$(am__dirstamp) \
	bucket/$(DEPDIR)/$(am__dirstamp)
bucket/BucketInputIterator.$(OBJEXT): bucket/$(am__dirstamp) \
	bucket/$(DEPDIR)/$(am__dirstamp)
bucket/BucketList.$(OBJEXT): bucket/$(am__dirstamp) \
	bucket/$(DEPDIR)/$(am__dirstamp)
bucket/BucketManagerImpl.$(OBJEXT): bucket/$(am__dirstamp) \
	bucket/$(DEPDIR)/$(am__dirstamp)
bucket/BucketOutputIterator.$(OBJEXT): bucket/$(am__dirstamp) \
	bucket/$(DEPDIR)/$(am__dirstamp)
bucket/BucketTests.$(OBJEXT): bucket/$(am__dirstamp) \
	bucket/$(DEPDIR)/$(am__dirstamp)
bucket/FutureBucket.$(OBJEXT): bucket/$(am__dirstamp) \
	bucket/$(DEPDIR)/$(am__dirstamp)
bucket/PublishQueueBuckets.$(OBJEXT): bucket/$(am__dirstamp) \
	bucket/$(DEPDIR)/$(am__dirstamp)
catchup/$(am__dirstamp):
	@$(MKDIR_P) catchup
	@: > catchup/$(am__dirstamp)
catchup/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) catchup/$(DEPDIR)
	@: > catchup/$(DEPDIR)/$(am__dirstamp)
catchup/ApplyBucketsWork.$(OBJEXT): catchup/$(am__dirstamp) \
	catchup/$(DEPDIR)/$(am__dirstamp)
catchup/ApplyLedgerChainWork.$(OBJEXT): catchup/$(am__dirstamp) \
	catchup/$(DEPDIR)/$(am__dirstamp)
catchup/CatchupConfiguration.$(OBJEXT): catchup/$(am__dirstamp) \
	catchup/$(DEPDIR)/$(am__dirstamp)
catchup/CatchupManagerImpl.$(OBJEXT): catchup/$(am__dirstamp) \
	catchup/$(DEPDIR)/$(am__dirstamp)
catchup/CatchupWork.$(OBJEXT): catchup/$(am__dirstamp) \
	catchup/$(DEPDIR)/$(am__dirstamp)
catchup/CatchupWorkTests.$(OBJEXT): catchup/$(am__dirstamp) \
	catchup/$(DEPDIR)/$(am__dirstamp)
catchup/DownloadBucketsWork.$(OBJEXT): catchup/$(am__dirstamp) \
	catchup/$(DEPDIR)/$(am__dirstamp)
catchup/VerifyLedgerChainWork.$(OBJEXT): catchup/$(am__dirstamp) \
	catchup/$(DEPDIR)/$(am__dirstamp)
crypto/$(am__dirstamp):
	@$(MKDIR_P) crypto
	@: > crypto/$(am__dirstamp)
crypto/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto/$(DEPDIR)
	@: > crypto/$(DEPDIR)/$(am__dirstamp)
crypto/CryptoTests.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/ECDH.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/Hex.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/KeyUtils.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/Random.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/SHA.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/SecretKey.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/SignerKey.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/SignerKeyUtils.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/StrKey.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
database/$(am__dirstamp):
	@$(MKDIR_P) database
	@: > database/$(am__dirstamp)
database/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) database/$(DEPDIR)
	@: > database/$(DEPDIR)/$(am__dirstamp)
database/Database.$(OBJEXT): database/$(am__dirstamp) \
	database/$(DEPDIR)/$(am__dirstamp)
database/DatabaseConnectionString.$(OBJEXT): database/$(am__dirstamp) \
	database/$(DEPDIR)/$(am__dirstamp)
database/DatabaseConnectionStringTest.$(OBJEXT):  \
	database/$(am__dirstamp) database/$(DEPDIR)/$(am__dirstamp)
database/DatabaseTests.$(OBJEXT): database/$(am__dirstamp) \
	database/$(DEPDIR)/$(am__dirstamp)
database/DatabaseUtils.$(OBJEXT): database/$(am__dirstamp) \
	database/$(DEPDIR)/$(am__dirstamp)
herder/$(am__dirstamp):
	@$(MKDIR_P) herder
	@: > herder/$(am__dirstamp)
herder/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) herder/$(DEPDIR)
	@: > herder/$(DEPDIR)/$(am__dirstamp)
herder/Herder.$(OBJEXT): herder/$(am__dirstamp) \
	herder/$(DEPDIR)/$(am__dirstamp)
herder/HerderImpl.$(OBJEXT): herder/$(am__dirstamp) \
	herder/$(DEPDIR)/$(am__dirstamp)
herder/HerderPersistenceImpl.$(OBJEXT): herder/$(am__dirstamp) \
	herder/$(DEPDIR)/$(am__dirstamp)
herder/HerderSCPDriver.$(OBJEXT): herder/$(am__dirstamp) \
	herder/$(DEPDIR)/$(am__dirstamp)
herder/HerderTests.$(OBJEXT): herder/$(am__dirstamp) \
	herder/$(DEPDIR)/$(am__dirstamp)
herder/HerderUtils.$(OBJEXT): herder/$(am__dirstamp) \
	herder/$(DEPDIR)/$(am__dirstamp)
herder/LedgerCloseData.$(OBJEXT): herder/$(am__dirstamp) \
	herder/$(DEPDIR)/$(am__dirstamp)
herder/PendingEnvelopes.$(OBJEXT): herder/$(am__dirstamp) \
	herder/$(DEPDIR)/$(am__dirstamp)
herder/PendingEnvelopesTests.$(OBJEXT): herder/$(am__dirstamp) \
	herder/$(DEPDIR)/$(am__dirstamp)
herder/TxSetFrame.$(OBJEXT): herder/$(am__dirstamp) \
	herder/$(DEPDIR)/$(am__dirstamp)
herder/Upgrades.$(OBJEXT): herder/$(am__dirstamp) \
	herder/$(DEPDIR)/$(am__dirstamp)
herder/UpgradesTests.$(OBJEXT): herder/$(am__dirstamp) \
	herder/$(DEPDIR)/$(am__dirstamp)
history/$(am__dirstamp):
	@$(MKDIR_P) history
	@: > history/$(am__dirstamp)
history/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) history/$(DEPDIR)
	@: > history/$(DEPDIR)/$(am__dirstamp)
history/FileTransferInfo.$(OBJEXT): history/$(am__dirstamp) \
	history/$(DEPDIR)/$(am__dirstamp)
history/HistoryArchive.$(OBJEXT): history/$(am__dirstamp) \
	history/$(DEPDIR)/$(am__dirstamp)
history/HistoryManagerImpl.$(OBJEXT): history/$(am__dirstamp) \
	history/$(DEPDIR)/$(am__dirstamp)
history/HistoryTests.$(OBJEXT): history/$(am__dirstamp) \
	history/$(DEPDIR)/$(am__dirstamp)
history/HistoryTestsUtils.$(OBJEXT): history/$(am__dirstamp) \
	history/$(DEPDIR)/$(am__dirstamp)
history/InferredQuorum.$(OBJEXT): history/$(am__dirstamp) \
	history/$(DEPDIR)/$(am__dirstamp)
history/InferredQuorumTests.$(OBJEXT): history/$(am__dirstamp) \
	history/$(DEPDIR)/$(am__dirstamp)
history/SerializeTests.$(OBJEXT): history/$(am__dirstamp) \
	history/$(DEPDIR)/$(am__dirstamp)
history/StateSnapshot.$(OBJEXT): history/$(am__dirstamp) \
	history/$(DEPDIR)/$(am__dirstamp)
historywork/$(am__dirstamp):
	@$(MKDIR_P) historywork
	@: > historywork/$(am__dirstamp)
historywork/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) historywork/$(DEPDIR)
	@: > historywork/$(DEPDIR)/$(am__dirstamp)
historywork/BatchDownloadWork.$(OBJEXT): historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/BucketDownloadWork.$(OBJEXT): historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/FetchRecentQsetsWork.$(OBJEXT):  \
	historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/GetAndUnzipRemoteFileWork.$(OBJEXT):  \
	historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/GetHistoryArchiveStateWork.$(OBJEXT):  \
	historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/GetRemoteFileWork.$(OBJEXT): historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/GunzipFileWork.$(OBJEXT): historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/GzipFileWork.$(OBJEXT): historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/MakeRemoteDirWork.$(OBJEXT): historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/Progress.$(OBJEXT): historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/PublishWork.$(OBJEXT): historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/PutHistoryArchiveStateWork.$(OBJEXT):  \
	historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/PutRemoteFileWork.$(OBJEXT): historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/PutSnapshotFilesWork.$(OBJEXT):  \
	historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/RepairMissingBucketsWork.$(OBJEXT):  \
	historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/ResolveSnapshotWork.$(OBJEXT):  \
	historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/RunCommandWork.$(OBJEXT): historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/VerifyBucketWork.$(OBJEXT): historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
historywork/WriteSnapshotWork.$(OBJEXT): historywork/$(am__dirstamp) \
	historywork/$(DEPDIR)/$(am__dirstamp)
invariant/$(am__dirstamp):
	@$(MKDIR_P) invariant
	@: > invariant/$(am__dirstamp)
invariant/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) invariant/$(DEPDIR)
	@: > invariant/$(DEPDIR)/$(am__dirstamp)
invariant/AccountSubEntriesCountIsValid.$(OBJEXT):  \
	invariant/$(am__dirstamp) invariant/$(DEPDIR)/$(am__dirstamp)
invariant/AccountSubEntriesCountIsValidTests.$(OBJEXT):  \
	invariant/$(am__dirstamp) invariant/$(DEPDIR)/$(am__dirstamp)
invariant/BucketListIsConsistentWithDatabase.$(OBJEXT):  \
	invariant/$(am__dirstamp) invariant/$(DEPDIR)/$(am__dirstamp)
invariant/BucketListIsConsistentWithDatabaseTests.$(OBJEXT):  \
	invariant/$(am__dirstamp) invariant/$(DEPDIR)/$(am__dirstamp)
invariant/CacheIsConsistentWithDatabase.$(OBJEXT):  \
	invariant/$(am__dirstamp) invariant/$(DEPDIR)/$(am__dirstamp)
invariant/CacheIsConsistentWithDatabaseTests.$(OBJEXT):  \
	invariant/$(am__dirstamp) invariant/$(DEPDIR)/$(am__dirstamp)
invariant/ConservationOfLumens.$(OBJEXT): invariant/$(am__dirstamp) \
	invariant/$(DEPDIR)/$(am__dirstamp)
invariant/ConservationOfLumensTests.$(OBJEXT):  \
	invariant/$(am__dirstamp) invariant/$(DEPDIR)/$(am__dirstamp)
invariant/InvariantDoesNotHold.$(OBJEXT): invariant/$(am__dirstamp) \
	invariant/$(DEPDIR)/$(am__dirstamp)
invariant/InvariantManagerImpl.$(OBJEXT): invariant/$(am__dirstamp) \
	invariant/$(DEPDIR)/$(am__dirstamp)
invariant/InvariantTestUtils.$(OBJEXT): invariant/$(am__dirstamp) \
	invariant/$(DEPDIR)/$(am__dirstamp)
invariant/InvariantTests.$(OBJEXT): invariant/$(am__dirstamp) \
	invariant/$(DEPDIR)/$(am__dirstamp)
invariant/LedgerEntryIsValid.$(OBJEXT): invariant/$(am__dirstamp) \
	invariant/$(DEPDIR)/$(am__dirstamp)
invariant/MinimumAccountBalance.$(OBJEXT): invariant/$(am__dirstamp) \
	invariant/$(DEPDIR)/$(am__dirstamp)
invariant/MinimumAccountBalanceTests.$(OBJEXT):  \
	invariant/$(am__dirstamp) invariant/$(DEPDIR)/$(am__dirstamp)
ledger/$(am__dirstamp):
	@$(MKDIR_P) ledger
	@: > ledger/$(am__dirstamp)
ledger/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ledger/$(DEPDIR)
	@: > ledger/$(DEPDIR)/$(am__dirstamp)
ledger/AccountFrame.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/CheckpointRange.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/DataFrame.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/EntryFrame.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/LedgerDelta.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/LedgerDeltaTests.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/LedgerEntryTests.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/LedgerHeaderFrame.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/LedgerHeaderTests.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/LedgerManagerImpl.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/LedgerPerformanceTests.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/LedgerRange.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/LedgerTestUtils.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/LedgerTests.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/OfferFrame.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/SyncingLedgerChain.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/SyncingLedgerChainTests.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
ledger/TrustFrame.$(OBJEXT): ledger/$(am__dirstamp) \
	ledger/$(DEPDIR)/$(am__dirstamp)
main/Application.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/ApplicationImpl.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/ApplicationTests.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/CommandHandler.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/Config.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/ConfigTests.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/ExternalQueue.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/ExternalQueueTests.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/LruCacheTests.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/Maintainer.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/ManagedDataCache.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/NtpSynchronizationChecker.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/PersistentState.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/Whitelist.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/dumpxdr.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/fuzz.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/main.$(OBJEXT): main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
overlay/$(am__dirstamp):
	@$(MKDIR_P) overlay
	@: > overlay/$(am__dirstamp)
overlay/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) overlay/$(DEPDIR)
	@: > overlay/$(DEPDIR)/$(am__dirstamp)
overlay/BanManagerImpl.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/FloodTests.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/Floodgate.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/ItemFetcher.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/ItemFetcherTests.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/LoadManager.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/LoadManagerTests.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/LoopbackPeer.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/OverlayManagerImpl.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/OverlayManagerTests.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/OverlayTests.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/Peer.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/PeerAuth.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/PeerBareAddress.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/PeerDoor.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/PeerRecord.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/PeerRecordTests.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/TCPPeer.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/TCPPeerTests.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/Tracker.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
overlay/TrackerTests.$(OBJEXT): overlay/$(am__dirstamp) \
	overlay/$(DEPDIR)/$(am__dirstamp)
process/$(am__dirstamp):
	@$(MKDIR_P) process
	@: > process/$(am__dirstamp)
process/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) process/$(DEPDIR)
	@: > process/$(DEPDIR)/$(am__dirstamp)
process/ProcessManagerImpl.$(OBJEXT): process/$(am__dirstamp) \
	process/$(DEPDIR)/$(am__dirstamp)
process/ProcessTests.$(OBJEXT): process/$(am__dirstamp) \
	process/$(DEPDIR)/$(am__dirstamp)
scp/$(am__dirstamp):
	@$(MKDIR_P) scp
	@: > scp/$(am__dirstamp)
scp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) scp/$(DEPDIR)
	@: > scp/$(DEPDIR)/$(am__dirstamp)
scp/BallotProtocol.$(OBJEXT): scp/$(am__dirstamp) \
	scp/$(DEPDIR)/$(am__dirstamp)
scp/LocalNode.$(OBJEXT): scp/$(am__dirstamp) \
	scp/$(DEPDIR)/$(am__dirstamp)
scp/NominationProtocol.$(OBJEXT): scp/$(am__dirstamp) \
	scp/$(DEPDIR)/$(am__dirstamp)
scp/QuorumSetTests.$(OBJEXT): scp/$(am__dirstamp) \
	scp/$(DEPDIR)/$(am__dirstamp)
scp/QuorumSetUtils.$(OBJEXT): scp/$(am__dirstamp) \
	scp/$(DEPDIR)/$(am__dirstamp)
scp/SCP.$(OBJEXT): scp/$(am__dirstamp) scp/$(DEPDIR)/$(am__dirstamp)
scp/SCPDriver.$(OBJEXT): scp/$(am__dirstamp) \
	scp/$(DEPDIR)/$(am__dirstamp)
scp/SCPTests.$(OBJEXT): scp/$(am__dirstamp) \
	scp/$(DEPDIR)/$(am__dirstamp)
scp/SCPUnitTests.$(OBJEXT): scp/$(am__dirstamp) \
	scp/$(DEPDIR)/$(am__dirstamp)
scp/Slot.$(OBJEXT): scp/$(am__dirstamp) scp/$(DEPDIR)/$(am__dirstamp)
simulation/$(am__dirstamp):
	@$(MKDIR_P) simulation
	@: > simulation/$(am__dirstamp)
simulation/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) simulation/$(DEPDIR)
	@: > simulation/$(DEPDIR)/$(am__dirstamp)
simulation/CoreTests.$(OBJEXT): simulation/$(am__dirstamp) \
	simulation/$(DEPDIR)/$(am__dirstamp)
simulation/LoadGenerator.$(OBJEXT): simulation/$(am__dirstamp) \
	simulation/$(DEPDIR)/$(am__dirstamp)
simulation/Simulation.$(OBJEXT): simulation/$(am__dirstamp) \
	simulation/$(DEPDIR)/$(am__dirstamp)
simulation/Topologies.$(OBJEXT): simulation/$(am__dirstamp) \
	simulation/$(DEPDIR)/$(am__dirstamp)
test/$(am__dirstamp):
	@$(MKDIR_P) test
	@: > test/$(am__dirstamp)
test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/$(DEPDIR)
	@: > test/$(DEPDIR)/$(am__dirstamp)
test/TestAccount.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/TestExceptions.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/TestMarket.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/TestPrinter.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/TestUtils.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/TxTests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
transactions/$(am__dirstamp):
	@$(MKDIR_P) transactions
	@: > transactions/$(am__dirstamp)
transactions/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) transactions/$(DEPDIR)
	@: > transactions/$(DEPDIR)/$(am__dirstamp)
transactions/AllowTrustOpFrame.$(OBJEXT):  \
	transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/AllowTrustTests.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/ChangeTrustOpFrame.$(OBJEXT):  \
	transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/ChangeTrustTests.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/CreateAccountOpFrame.$(OBJEXT):  \
	transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/CreatePassiveOfferOpFrame.$(OBJEXT):  \
	transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/ExchangeTests.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/InflationOpFrame.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/InflationTests.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/ManageDataOpFrame.$(OBJEXT):  \
	transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/ManageDataTests.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/ManageOfferOpFrame.$(OBJEXT):  \
	transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/MergeOpFrame.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/MergeTests.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/OfferExchange.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/OfferTests.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/OperationFrame.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/PathPaymentOpFrame.$(OBJEXT):  \
	transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/PathPaymentTests.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/PaymentOpFrame.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/PaymentTests.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/SetOptionsOpFrame.$(OBJEXT):  \
	transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/SetOptionsTests.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/SignatureChecker.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/SignatureUtils.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/SignatureUtilsTest.$(OBJEXT):  \
	transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/TransactionFrame.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/TxEnvelopeTests.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
transactions/TxResultsTests.$(OBJEXT): transactions/$(am__dirstamp) \
	transactions/$(DEPDIR)/$(am__dirstamp)
util/$(am__dirstamp):
	@$(MKDIR_P) util
	@: > util/$(am__dirstamp)
util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) util/$(DEPDIR)
	@: > util/$(DEPDIR)/$(am__dirstamp)
util/BalanceTests.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/BigDivideTests.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/BitsetEnumerator.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/BitsetEnumeratorTests.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/Fs.$(OBJEXT): util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/FsTests.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/GlobalChecks.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/HashOfHash.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/Logging.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/Math.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/NtpClient.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/NtpWork.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/SecretValue.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/StatusManager.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/StatusManagerTest.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/Timer.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/TimerTests.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/TmpDir.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/Uint128Tests.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/types.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
work/$(am__dirstamp):
	@$(MKDIR_P) work
	@: > work/$(am__dirstamp)
work/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) work/$(DEPDIR)
	@: > work/$(DEPDIR)/$(am__dirstamp)
work/Work.$(OBJEXT): work/$(am__dirstamp) \
	work/$(DEPDIR)/$(am__dirstamp)
work/WorkManagerImpl.$(OBJEXT): work/$(am__dirstamp) \
	work/$(DEPDIR)/$(am__dirstamp)
work/WorkParent.$(OBJEXT): work/$(am__dirstamp) \
	work/$(DEPDIR)/$(am__dirstamp)
work/WorkTests.$(OBJEXT): work/$(am__dirstamp) \
	work/$(DEPDIR)/$(am__dirstamp)

stellar-core$(EXEEXT): $(stellar_core_OBJECTS) $(stellar_core_DEPENDENCIES) $(EXTRA_stellar_core_DEPENDENCIES) 
	@rm -f stellar-core$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(stellar_core_OBJECTS) $(stellar_core_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f bucket/*.$(OBJEXT)
	-rm -f catchup/*.$(OBJEXT)
	-rm -f crypto/*.$(OBJEXT)
	-rm -f database/*.$(OBJEXT)
	-rm -f herder/*.$(OBJEXT)
	-rm -f history/*.$(OBJEXT)
	-rm -f historywork/*.$(OBJEXT)
	-rm -f invariant/*.$(OBJEXT)
	-rm -f ledger/*.$(OBJEXT)
	-rm -f main/*.$(OBJEXT)
	-rm -f overlay/*.$(OBJEXT)
	-rm -f process/*.$(OBJEXT)
	-rm -f scp/*.$(OBJEXT)
	-rm -f simulation/*.$(OBJEXT)
	-rm -f test/*.$(OBJEXT)
	-rm -f transactions/*.$(OBJEXT)
	-rm -f util/*.$(OBJEXT)
	-rm -f work/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@bucket/$(DEPDIR)/Bucket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@bucket/$(DEPDIR)/BucketApplicator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@bucket/$(DEPDIR)/BucketInputIterator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@bucket/$(DEPDIR)/BucketList.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@bucket/$(DEPDIR)/BucketManagerImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@bucket/$(DEPDIR)/BucketOutputIterator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@bucket/$(DEPDIR)/BucketTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@bucket/$(DEPDIR)/FutureBucket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@bucket/$(DEPDIR)/PublishQueueBuckets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@catchup/$(DEPDIR)/ApplyBucketsWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@catchup/$(DEPDIR)/ApplyLedgerChainWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@catchup/$(DEPDIR)/CatchupConfiguration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@catchup/$(DEPDIR)/CatchupManagerImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@catchup/$(DEPDIR)/CatchupWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@catchup/$(DEPDIR)/CatchupWorkTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@catchup/$(DEPDIR)/DownloadBucketsWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@catchup/$(DEPDIR)/VerifyLedgerChainWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/CryptoTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/ECDH.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/Hex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/KeyUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/Random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/SHA.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/SecretKey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/SignerKey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/SignerKeyUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@crypto/$(DEPDIR)/StrKey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@database/$(DEPDIR)/Database.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@database/$(DEPDIR)/DatabaseConnectionString.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@database/$(DEPDIR)/DatabaseConnectionStringTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@database/$(DEPDIR)/DatabaseTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@database/$(DEPDIR)/DatabaseUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@herder/$(DEPDIR)/Herder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@herder/$(DEPDIR)/HerderImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@herder/$(DEPDIR)/HerderPersistenceImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@herder/$(DEPDIR)/HerderSCPDriver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@herder/$(DEPDIR)/HerderTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@herder/$(DEPDIR)/HerderUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@herder/$(DEPDIR)/LedgerCloseData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@herder/$(DEPDIR)/PendingEnvelopes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@herder/$(DEPDIR)/PendingEnvelopesTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@herder/$(DEPDIR)/TxSetFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@herder/$(DEPDIR)/Upgrades.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@herder/$(DEPDIR)/UpgradesTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@history/$(DEPDIR)/FileTransferInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@history/$(DEPDIR)/HistoryArchive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@history/$(DEPDIR)/HistoryManagerImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@history/$(DEPDIR)/HistoryTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@history/$(DEPDIR)/HistoryTestsUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@history/$(DEPDIR)/InferredQuorum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@history/$(DEPDIR)/InferredQuorumTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@history/$(DEPDIR)/SerializeTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@history/$(DEPDIR)/StateSnapshot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/BatchDownloadWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/BucketDownloadWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/FetchRecentQsetsWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/GetAndUnzipRemoteFileWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/GetHistoryArchiveStateWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/GetRemoteFileWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/GunzipFileWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/GzipFileWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/MakeRemoteDirWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/Progress.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/PublishWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/PutHistoryArchiveStateWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/PutRemoteFileWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/PutSnapshotFilesWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/RepairMissingBucketsWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/ResolveSnapshotWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/RunCommandWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/VerifyBucketWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@historywork/$(DEPDIR)/WriteSnapshotWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/AccountSubEntriesCountIsValid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/AccountSubEntriesCountIsValidTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/BucketListIsConsistentWithDatabase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/BucketListIsConsistentWithDatabaseTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/CacheIsConsistentWithDatabase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/CacheIsConsistentWithDatabaseTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/ConservationOfLumens.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/ConservationOfLumensTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/InvariantDoesNotHold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/InvariantManagerImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/InvariantTestUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/InvariantTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/LedgerEntryIsValid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/MinimumAccountBalance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@invariant/$(DEPDIR)/MinimumAccountBalanceTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/AccountFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/CheckpointRange.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/DataFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/EntryFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/LedgerDelta.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/LedgerDeltaTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/LedgerEntryTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/LedgerHeaderFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/LedgerHeaderTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/LedgerManagerImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/LedgerPerformanceTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/LedgerRange.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/LedgerTestUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/LedgerTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/OfferFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/SyncingLedgerChain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/SyncingLedgerChainTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ledger/$(DEPDIR)/TrustFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/Application.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/ApplicationImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/ApplicationTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/CommandHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/Config.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/ConfigTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/ExternalQueue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/ExternalQueueTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/LruCacheTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/Maintainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/ManagedDataCache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/NtpSynchronizationChecker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/PersistentState.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/StellarCoreVersion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/Whitelist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/dumpxdr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/fuzz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@main/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/BanManagerImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/FloodTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/Floodgate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/ItemFetcher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/ItemFetcherTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/LoadManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/LoadManagerTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/LoopbackPeer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/OverlayManagerImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/OverlayManagerTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/OverlayTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/Peer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/PeerAuth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/PeerBareAddress.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/PeerDoor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/PeerRecord.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/PeerRecordTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/TCPPeer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/TCPPeerTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/Tracker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@overlay/$(DEPDIR)/TrackerTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@process/$(DEPDIR)/ProcessManagerImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@process/$(DEPDIR)/ProcessTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@scp/$(DEPDIR)/BallotProtocol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@scp/$(DEPDIR)/LocalNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@scp/$(DEPDIR)/NominationProtocol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@scp/$(DEPDIR)/QuorumSetTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@scp/$(DEPDIR)/QuorumSetUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@scp/$(DEPDIR)/SCP.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@scp/$(DEPDIR)/SCPDriver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@scp/$(DEPDIR)/SCPTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@scp/$(DEPDIR)/SCPUnitTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@scp/$(DEPDIR)/Slot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@simulation/$(DEPDIR)/CoreTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@simulation/$(DEPDIR)/LoadGenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@simulation/$(DEPDIR)/Simulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@simulation/$(DEPDIR)/Topologies.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/TestAccount.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/TestExceptions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/TestMarket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/TestPrinter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/TestUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/TxTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@test/$(DEPDIR)/test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/AllowTrustOpFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/AllowTrustTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/ChangeTrustOpFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/ChangeTrustTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/CreateAccountOpFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/CreatePassiveOfferOpFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/ExchangeTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/InflationOpFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/InflationTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/ManageDataOpFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/ManageDataTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/ManageOfferOpFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/MergeOpFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/MergeTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/OfferExchange.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/OfferTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/OperationFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/PathPaymentOpFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/PathPaymentTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/PaymentOpFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/PaymentTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/SetOptionsOpFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/SetOptionsTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/SignatureChecker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/SignatureUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/SignatureUtilsTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/TransactionFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/TxEnvelopeTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@transactions/$(DEPDIR)/TxResultsTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/BalanceTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/BigDivideTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/BitsetEnumerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/BitsetEnumeratorTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/Fs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/FsTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/GlobalChecks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/HashOfHash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/Logging.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/Math.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/NtpClient.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/NtpWork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/SecretValue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/StatusManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/StatusManagerTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/Timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/TimerTests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/TmpDir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/Uint128Tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@util/$(DEPDIR)/types.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@work/$(DEPDIR)/Work.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@work/$(DEPDIR)/WorkManagerImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@work/$(DEPDIR)/WorkParent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@work/$(DEPDIR)/WorkTests.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst $(AM_TESTS_FD_REDIRECT); then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f bucket/$(DEPDIR)/$(am__dirstamp)
	-rm -f bucket/$(am__dirstamp)
	-rm -f catchup/$(DEPDIR)/$(am__dirstamp)
	-rm -f catchup/$(am__dirstamp)
	-rm -f crypto/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto/$(am__dirstamp)
	-rm -f database/$(DEPDIR)/$(am__dirstamp)
	-rm -f database/$(am__dirstamp)
	-rm -f herder/$(DEPDIR)/$(am__dirstamp)
	-rm -f herder/$(am__dirstamp)
	-rm -f history/$(DEPDIR)/$(am__dirstamp)
	-rm -f history/$(am__dirstamp)
	-rm -f historywork/$(DEPDIR)/$(am__dirstamp)
	-rm -f historywork/$(am__dirstamp)
	-rm -f invariant/$(DEPDIR)/$(am__dirstamp)
	-rm -f invariant/$(am__dirstamp)
	-rm -f ledger/$(DEPDIR)/$(am__dirstamp)
	-rm -f ledger/$(am__dirstamp)
	-rm -f main/$(DEPDIR)/$(am__dirstamp)
	-rm -f main/$(am__dirstamp)
	-rm -f overlay/$(DEPDIR)/$(am__dirstamp)
	-rm -f overlay/$(am__dirstamp)
	-rm -f process/$(DEPDIR)/$(am__dirstamp)
	-rm -f process/$(am__dirstamp)
	-rm -f scp/$(DEPDIR)/$(am__dirstamp)
	-rm -f scp/$(am__dirstamp)
	-rm -f simulation/$(DEPDIR)/$(am__dirstamp)
	-rm -f simulation/$(am__dirstamp)
	-rm -f test/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/$(am__dirstamp)
	-rm -f transactions/$(DEPDIR)/$(am__dirstamp)
	-rm -f transactions/$(am__dirstamp)
	-rm -f util/$(DEPDIR)/$(am__dirstamp)
	-rm -f util/$(am__dirstamp)
	-rm -f work/$(DEPDIR)/$(am__dirstamp)
	-rm -f work/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
@USE_AFL_FUZZ_FALSE@distclean-local:
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf bucket/$(DEPDIR) catchup/$(DEPDIR) crypto/$(DEPDIR) database/$(DEPDIR) herder/$(DEPDIR) history/$(DEPDIR) historywork/$(DEPDIR) invariant/$(DEPDIR) ledger/$(DEPDIR) main/$(DEPDIR) overlay/$(DEPDIR) process/$(DEPDIR) scp/$(DEPDIR) simulation/$(DEPDIR) test/$(DEPDIR) transactions/$(DEPDIR) util/$(DEPDIR) work/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf bucket/$(DEPDIR) catchup/$(DEPDIR) crypto/$(DEPDIR) database/$(DEPDIR) herder/$(DEPDIR) history/$(DEPDIR) historywork/$(DEPDIR) invariant/$(DEPDIR) ledger/$(DEPDIR) main/$(DEPDIR) overlay/$(DEPDIR) process/$(DEPDIR) scp/$(DEPDIR) simulation/$(DEPDIR) test/$(DEPDIR) transactions/$(DEPDIR) util/$(DEPDIR) work/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-local distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile

.x.h: $(XDRC)
	$(XDRC) -hh -o $@ $<

$(srcdir)/src.mk: $(top_srcdir)/make-mks
	cd $(top_srcdir) && ./make-mks

$(TESTDATA_DIR)/%.cfg : $(top_srcdir)/docs/%.cfg
	mkdir -p $(@D) && cp $< $@

$(TESTDATA_DIR)/%.json : $(top_srcdir)/src/history/serialize-tests/%.json
	mkdir -p $(@D) && cp $< $@

.PHONY: always
always:
	@:

# Always rebuild because .git/HEAD is a symbolic ref one can't depend on
main/StellarCoreVersion.cpp: always
	@vers=$$(cd "$(srcdir)" \
		&& git describe --always --dirty --tags 2>/dev/null \
		|| echo "$(PACKAGE) $(VERSION)"); \
		sed -e "s/%%VERSION%%/$$vers/" < main/StellarCoreVersion.cpp.in > $@~
	@if cmp -s $@~ $@; then rm -f $@~; else \
	    mv -f $@~ $@ && printf "echo '%s' > $@\n" "$$(cat $@)"; fi

@USE_CLANG_FORMAT_TRUE@format: always
@USE_CLANG_FORMAT_TRUE@	cd $(srcdir) && $(CLANG_FORMAT) -style=file -i $(SRC_CXX_FILES) $(SRC_H_FILES)

@USE_AFL_FUZZ_TRUE@fuzz-testcases: stellar-core
@USE_AFL_FUZZ_TRUE@	mkdir -p fuzz-testcases
@USE_AFL_FUZZ_TRUE@	for i in `seq 1 10`; do \
@USE_AFL_FUZZ_TRUE@	    ./stellar-core --genfuzz fuzz-testcases/fuzz$$i.xdr; \
@USE_AFL_FUZZ_TRUE@	done

@USE_AFL_FUZZ_TRUE@fuzz: fuzz-testcases stellar-core
@USE_AFL_FUZZ_TRUE@	mkdir -p fuzz-findings
@USE_AFL_FUZZ_TRUE@	afl-fuzz -m 8000 -t 250 -i fuzz-testcases -o fuzz-findings \
@USE_AFL_FUZZ_TRUE@	    ./stellar-core --fuzz @@

@USE_AFL_FUZZ_TRUE@fuzz-clean: always
@USE_AFL_FUZZ_TRUE@	rm -Rf fuzz-testcases fuzz-findings

@USE_AFL_FUZZ_TRUE@distclean-local: fuzz-clean

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
